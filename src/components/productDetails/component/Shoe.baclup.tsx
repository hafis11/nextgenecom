/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 shoe.gltf
*/

import React, { useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { useSelector, useDispatch } from "react-redux";
import { getbody } from "../../../redux/modal/selectors";
import { setActive } from "../../../redux/modal/slice";

function ShoeModel(props) {
  const { nodes, materials } = useGLTF("/assets/shoeModal/shoe.gltf");
  const value = useSelector(getbody);
  const dispatch = useDispatch();

  useEffect(() => void (document.body.style.cursor = "pointer"), []);
  return (
    <group
      {...props}
      dispose={null}
      scale={2.7}
      onPointerOver={(e) => e.object.material.color.set("red")}
      onPointerOut={(e) => e.object.material.color.set("white")}
    >
      <mesh
        geometry={nodes.shoe.geometry}
        material={materials.laces}
        // material-color={value?.laces}
        // onClick={() => dispatch(setActive("laces"))}
      />
      <mesh
        geometry={nodes.shoe_1.geometry}
        material={materials.mesh}
        // material-color={value?.mesh}
        // onClick={() => dispatch(setActive("mesh"))}
      />
      <mesh
        geometry={nodes.shoe_2.geometry}
        material={materials.caps}
        // material-color={value?.caps}
        // onClick={() => dispatch(setActive("caps"))}
      />
      <mesh
        geometry={nodes.shoe_3.geometry}
        material={materials.inner}
        // material-color={value?.inner}
        // onClick={() => dispatch(setActive("inner"))}
      />
      <mesh
        geometry={nodes.shoe_4.geometry}
        material={materials.sole}
        // material-color={value?.sole}
        // onClick={() => dispatch(setActive("sole"))}
      />
      <mesh
        geometry={nodes.shoe_5.geometry}
        material={materials.stripes}
        // material-color={value?.stripes}
        // onClick={() => dispatch(setActive("stripes"))}
      />
      <mesh
        geometry={nodes.shoe_6.geometry}
        material={materials.band}
        // material-color={value?.band}
        // onClick={() => dispatch(setActive("band"))}
      />
      <mesh
        geometry={nodes.shoe_7.geometry}
        material={materials.patch}
        // material-color={value?.patch}
        // onClick={() => dispatch(setActive("patch"))}
      />
    </group>
  );
}

useGLTF.preload("/assets/shoeModal/shoe.gltf");

export default ShoeModel;
